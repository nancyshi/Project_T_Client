{"version":3,"sources":["networkMgr.js"],"names":["Networkmgr","cc","Class","properties","start","sendMessage","msg","port","ip","suffix","successCallBack","xhr","XMLHttpRequest","onreadystatechange","readyState","status","url","toString","open","send","makeMessageObj","moduleName","messageTypeName","gloableConfig","require","netWorkMessageConfigs","moduleObj","basicIp","basicPort","message","obj","error","sendMessageByMsgObj","msgObj","msgForSend","JSON","stringify","sharedMgr","module","exports"],"mappings":"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","file":"networkMgr.js","sourceRoot":"../../../../../assets/scripts/libs","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nvar Networkmgr = cc.Class({\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    // update (dt) {},\n\n    sendMessage(msg,port,ip,suffix,successCallBack) {\n        var xhr = new XMLHttpRequest()\n        xhr.onreadystatechange = function() {\n            if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {\n                successCallBack(xhr)\n            }\n        }\n        var url = \"http://\" + ip + \":\" + port.toString() +\"/\" + suffix.toString()\n        xhr.open(\"POST\",url)\n        xhr.send(msg)\n    },\n\n    makeMessageObj(moduleName, messageTypeName) {\n        var gloableConfig = require(\"gloableConfig\")\n        \n        var netWorkMessageConfigs = gloableConfig.netWorkMessageConfigs\n        var moduleObj = netWorkMessageConfigs[moduleName]\n        \n        if (moduleObj != null) {\n            var ip = gloableConfig.basicIp\n            var port = gloableConfig.basicPort\n            if (moduleObj.ip != null) {\n                ip = moduleObj.ip\n            }\n            if (moduleObj.port != null) {\n                port = moduleObj.port\n            }\n\n            var suffix = moduleObj.suffix\n            \n            var message = moduleObj[messageTypeName]\n            var successCallBack = function(xhr){}\n            var obj = {\n                ip: ip,\n                port: port,\n                suffix: suffix,\n                message: message,\n                successCallBack: successCallBack\n            }\n            return obj\n        }\n        else {\n            cc.error(\"no such module name of \" + moduleName)\n            return null\n        }\n    },\n\n    sendMessageByMsgObj(msgObj) {\n        var url = \"http://\" + msgObj.ip + \":\" + msgObj.port.toString() + \"/\" + msgObj.suffix\n        var xhr = new XMLHttpRequest()\n        xhr.onreadystatechange = function() {\n            if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {\n                msgObj.successCallBack(xhr)\n            }\n        }\n        xhr.open(\"POST\",url)\n        var msgForSend = JSON.stringify(msgObj.message)\n        xhr.send(msgForSend)\n    }\n});\n\n\nvar sharedMgr = new Networkmgr()\nmodule.exports = sharedMgr"]}