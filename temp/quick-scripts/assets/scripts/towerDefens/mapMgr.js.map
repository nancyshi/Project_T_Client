{"version":3,"sources":["mapMgr.js"],"names":["cc","Class","extends","Component","properties","tileMap","TiledMap","mapSize","Size","tileSize","mapSizeInPix","roadLayer","TiledLayer","pathes","onLoad","initProperties","testMonstor","find","monstorMgr","getComponent","basePathPoints","state","start","node","getMapSize","getTileSize","size","width","height","getLayer","pathesObjGroup","getObjectGroup","pathObjects","getObjects","index","onePathObj","position","v2","x","y","points","polylinePoints","i","onePoint","nodePosition","convertMapCodiToNodeCodi","key","name","mapOrigin","resultx","resulty","getCorrespondingPointInParraline","point1","point2","pointPara","givenPointInBaseLine","x1","y1","x2","y2","xp","yp","k","p","v"],"mappings":"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","file":"mapMgr.js","sourceRoot":"../../../../../assets/scripts/towerDefens","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        tileMap: cc.TiledMap,\n        mapSize: cc.Size,\n        tileSize: cc.Size,\n        mapSizeInPix: cc.Size,\n        roadLayer: cc.TiledLayer,\n        pathes: null\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.initProperties()\n        //have a test of monstor\n        var testMonstor = cc.find(\"Canvas/monstor_lvpang\")\n        var monstorMgr = testMonstor.getComponent(\"monstorMgr\")\n        monstorMgr.basePathPoints = this.pathes[\"testPath\"]\n        monstorMgr.state = 1\n    },\n\n    start () {\n\n    },\n\n    initProperties() {\n        this.tileMap = this.node.getComponent(cc.TiledMap)\n        this.mapSize = this.tileMap.getMapSize()\n        this.tileSize = this.tileMap.getTileSize()\n        this.mapSizeInPix = cc.size(this.mapSize.width * this.tileSize.width, this.mapSize.height * this.tileSize.height)\n        this.roadLayer = this.tileMap.getLayer(\"road\")\n        var pathesObjGroup = this.tileMap.getObjectGroup(\"pathes\")\n        var pathObjects = pathesObjGroup.getObjects()\n\n        this.pathes = {}\n        for (var index in pathObjects) {\n            var onePathObj = pathObjects[index]\n            var position = cc.v2(onePathObj.x,onePathObj.y)\n            var points = onePathObj.polylinePoints\n            for (var i in points) {\n                var onePoint = points[i]\n                onePoint.x = position.x + onePoint.x\n                onePoint.y = position.y + onePoint.y\n                var nodePosition = this.convertMapCodiToNodeCodi(onePoint.x,onePoint.y)\n                onePoint.x = nodePosition.x\n                onePoint.y = nodePosition.y\n            }\n            let key = onePathObj.name\n            \n            this.pathes[key] = points\n        }\n    },\n\n    convertMapCodiToNodeCodi(x,y) {\n        var mapOrigin = cc.v2(-1 * this.mapSizeInPix.width /2 , -1 * this.mapSizeInPix.height / 2)\n        var resultx = mapOrigin.x + x\n        var resulty = mapOrigin.y + y\n        return cc.v2(resultx,resulty)\n    },\n\n    getCorrespondingPointInParraline(point1,point2,pointPara,givenPointInBaseLine) {\n        var x1 = point1.x\n        var y1 = point1.y\n        var x2 = point2.x\n        var y2 = point2.y\n        var xp = pointPara.x\n        var yp = pointPara.y\n        var x = givenPointInBaseLine.x\n        var y = givenPointInBaseLine.y\n        var resultx = null\n        var resulty = null\n        if (x2 == x1) {\n            resultx = xp\n            resulty = y\n            \n        }\n        else if (y1 == y2) {\n            resultx = x\n            resulty = yp\n            \n        }\n        else {\n            var k = (y2 - y1) / (x2 - x1)\n            var p = yp - k * xp\n            var v = y + (1 / k) * x\n            resultx = (v - p) / (k + (1 / k))\n            resulty = k * resultx + p\n        }\n        if (resultx != null && resulty != null) {\n            return cc.v2(resultx,resulty)\n        }\n        else {\n            return null\n        }\n    }\n\n    // update (dt) {},\n});\n"]}