{"version":3,"sources":["skill.js"],"names":["cc","Class","properties","id","Integer","skillType","target","Node","owner","releaseSkill","skillConfig","require","toString","animationName","animComp","node","getComponent","Animation","play","error","produceResult","sendBullet","bulletResId","bulletResourceId","bulletPrefab","find","reses","prefabName","offsetX","offsetY","moveSpeed","bullet","instantiate","bulletMgr","delegate","x","y","addChild","onHit","hurtEffectResourceId","hurtEffectPrefab","hurtEffect","hurtEffectOffsetX","hurtEffectOffsetY","hurtCoefficient","additionalBuffId"],"mappings":"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","file":"skill.js","sourceRoot":"../../../../../../assets/scripts/towerDefens/skill","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        id: cc.Integer,\n        skillType: 1, //while 1 indicate initiative skill , and 2 is passivity skill\n        target: cc.Node,\n        owner: cc.Node\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    // start () {\n\n    // },\n\n    releaseSkill() {\n        if (this.skillType == 1) {\n            var skillConfig = require(\"skillConfig\")[this.id.toString()]\n            var animationName = skillConfig.animationName\n            var animComp = this.owner.node.getComponent(cc.Animation)\n            if (animationName != null && animationName != \"\") {\n                animComp.play(animationName)\n            }\n            else{\n                cc.error(\"not invalid animation name\")\n            }\n        }\n        else if (this.skillType == 2) {\n            this.produceResult()\n        }\n\n    },\n    sendBullet() {\n        var skillConfig = require(\"skillConfig\")[this.id.toString()]\n        var bulletResId = skillConfig.bulletResourceId\n        var bulletPrefab = cc.find(\"Canvas/resNode\").getComponent(\"resMgr\").reses[bulletResId.toString()].prefabName\n\n        var offsetX = skillConfig.offsetX\n        var offsetY = skillConfig.offsetY\n        var moveSpeed = skillConfig.moveSpeed\n\n        var bullet = cc.instantiate(bulletPrefab)\n        var bulletMgr = bullet.getComponent(\"bulletMgr\")\n        bulletMgr.delegate = this\n        bulletMgr.moveSpeed = moveSpeed\n        bulletMgr.target = this.target\n\n        bullet.x = offsetX\n        bullet.y = offsetY\n        this.owner.addChild(bullet)\n\n    },\n    onHit() {\n        //called when it's time to play hurt effect\n        var skillConfig = require(\"skillConfig\")[this.id.toString()]\n        var hurtEffectResourceId = skillConfig.hurtEffectResourceId\n        var hurtEffectPrefab = cc.find(\"Canvas/resNode\").getComponent(\"resMgr\").reses[hurtEffectResourceId.toString()].prefabName\n\n        var hurtEffect = cc.instantiate(hurtEffectPrefab)\n        var offsetX = skillConfig.hurtEffectOffsetX\n        var offsetY = skillConfig.hurtEffectOffsetY\n        \n        hurtEffect.x = offsetX\n        hurtEffect.y = offsetY\n        this.target.addChild(hurtEffect)\n        \n        var animComp = hurtEffect.getComponent(cc.Animation)\n        animComp.play(\"getHurt\")\n    },\n    \n    produceResult() {\n        var skillConfig = require(\"skillConfig\")[this.id.toString()]\n        var hurtCoefficient = skillConfig.hurtCoefficient\n        var additionalBuffId = skillConfig.additionalBuffId\n\n        \n    }\n\n    // update (dt) {},\n});\n"]}