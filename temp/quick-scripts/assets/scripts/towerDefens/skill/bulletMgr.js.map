{"version":3,"sources":["bulletMgr.js"],"names":["cc","Class","extends","Component","properties","moveSpeed","delegate","target","Node","targetLastPosition","start","manager","director","getCollisionManager","enabled","update","dt","originDirection","getComponent","currentHp","v2","x","node","y","direction","normalize","vx","vy","dis1","mag","angle","signAngle","degree","Math","PI","dis2","removeFromParent","onCollisionEnter","other","self","onHit"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,mBAAW,CAhBH;AAiBRC,kBAAU,IAjBF;AAkBRC,gBAAQP,GAAGQ,IAlBH;AAmBRC,4BAAoB;AAnBZ,KAHP;;AAyBL;;AAEA;;AAEAC,SA7BK,mBA6BI;AACL,YAAIC,UAAUX,GAAGY,QAAH,CAAYC,mBAAZ,EAAd;AACAF,gBAAQG,OAAR,GAAkB,IAAlB;AACH,KAhCI;AAkCLC,UAlCK,kBAkCGC,EAlCH,EAkCO;AACR,YAAIC,kBAAkB,IAAtB;AACA,YAAI,KAAKV,MAAL,CAAYW,YAAZ,CAAyB,kBAAzB,EAA6CC,SAA7C,GAAyD,CAA7D,EAAgE;AAC5DF,8BAAkBjB,GAAGoB,EAAH,CAAM,KAAKb,MAAL,CAAYc,CAAZ,GAAgB,KAAKC,IAAL,CAAUD,CAAhC,EAAmC,KAAKd,MAAL,CAAYgB,CAAZ,GAAgB,KAAKD,IAAL,CAAUC,CAA7D,CAAlB;AACA,iBAAKd,kBAAL,GAA0BT,GAAGoB,EAAH,CAAM,KAAKb,MAAL,CAAYc,CAAlB,EAAqB,KAAKd,MAAL,CAAYgB,CAAjC,CAA1B;AACH,SAHD,MAIK;AACDN,8BAAkBjB,GAAGoB,EAAH,CAAM,KAAKX,kBAAL,CAAwBY,CAAxB,GAA4B,KAAKC,IAAL,CAAUD,CAA5C,EAA+C,KAAKZ,kBAAL,CAAwBc,CAAxB,GAA4B,KAAKD,IAAL,CAAUC,CAArF,CAAlB;AACH;AACD,YAAIC,YAAYP,gBAAgBQ,SAAhB,EAAhB;AACA,YAAIC,KAAKF,UAAUH,CAAV,GAAc,KAAKhB,SAA5B;AACA,YAAIsB,KAAKH,UAAUD,CAAV,GAAc,KAAKlB,SAA5B;AACA,YAAIuB,OAAOX,gBAAgBY,GAAhB,EAAX;;AAEA,aAAKP,IAAL,CAAUD,CAAV,GAAc,KAAKC,IAAL,CAAUD,CAAV,GAAcK,KAAKV,EAAjC;AACA,aAAKM,IAAL,CAAUC,CAAV,GAAc,KAAKD,IAAL,CAAUC,CAAV,GAAcI,KAAKX,EAAjC;AACA,YAAIc,QAAQN,UAAUO,SAAV,CAAoB/B,GAAGoB,EAAH,CAAM,CAAN,EAAQ,CAAR,CAApB,CAAZ;AACA,YAAIY,SAASF,QAAQG,KAAKC,EAAb,GAAkB,GAA/B;AACA,aAAKZ,IAAL,CAAUQ,KAAV,GAAkB,CAAC,CAAD,GAAKE,MAAvB;AACA,YAAIG,OAAOnC,GAAGoB,EAAH,CAAMM,KAAKV,EAAX,EAAeW,KAAKX,EAApB,EAAwBa,GAAxB,EAAX;;AAEA,YAAIM,QAAQP,IAAZ,EAAkB;AACd,iBAAKN,IAAL,CAAUc,gBAAV;AACH;AACJ,KA1DI;AA2DLC,oBA3DK,4BA2DYC,KA3DZ,EA2DkBC,IA3DlB,EA2DwB;AACzB,YAAID,MAAMhB,IAAN,IAAc,KAAKf,MAAvB,EAA+B;AAC3B,iBAAKD,QAAL,CAAckC,KAAd;AACA,iBAAKlB,IAAL,CAAUc,gBAAV;AACH;AACJ;AAhEI,CAAT","file":"bulletMgr.js","sourceRoot":"../../../../../../assets/scripts/towerDefens/skill","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        moveSpeed: 0,\n        delegate: null,\n        target: cc.Node,\n        targetLastPosition: null\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n        var manager = cc.director.getCollisionManager()\n        manager.enabled = true\n    },\n\n    update (dt) {\n        var originDirection = null\n        if (this.target.getComponent(\"battleElementMgr\").currentHp > 0) {\n            originDirection = cc.v2(this.target.x - this.node.x, this.target.y - this.node.y)\n            this.targetLastPosition = cc.v2(this.target.x, this.target.y)\n        }\n        else {\n            originDirection = cc.v2(this.targetLastPosition.x - this.node.x, this.targetLastPosition.y - this.node.y)\n        }\n        var direction = originDirection.normalize()\n        var vx = direction.x * this.moveSpeed\n        var vy = direction.y * this.moveSpeed\n        var dis1 = originDirection.mag()\n\n        this.node.x = this.node.x + vx * dt\n        this.node.y = this.node.y + vy * dt\n        var angle = direction.signAngle(cc.v2(1,0))\n        var degree = angle / Math.PI * 180\n        this.node.angle = -1 * degree\n        var dis2 = cc.v2(vx * dt, vy * dt).mag()\n        \n        if (dis2 >= dis1) {\n            this.node.removeFromParent()\n        }\n    },\n    onCollisionEnter(other,self) {\n        if (other.node == this.target) {\n            this.delegate.onHit()\n            this.node.removeFromParent()\n        }\n    }\n\n});\n"]}