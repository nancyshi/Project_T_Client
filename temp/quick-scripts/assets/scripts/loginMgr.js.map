{"version":3,"sources":["loginMgr.js"],"names":["LoginType","ACCOUNT","WE_CHAT_GAME","DEVICE_ID","cc","Class","properties","playerId","get","_playerId","set","value","onPlayerIdSet","login","loginType","_getPlayerId","updatePlayerData","dataMgr","require","_genarateUUID","time","sys","now","uuid","replace","c","r","Math","random","v","toString","message","deviceId","localStorage","getItem","setItem","log","networkMgr","self","loader","loadRes","err","res","port","json","ip","suffix","JSON","stringify","sendMessage","xhr","response","responseText","parse","type"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,YAAY;AACZC,aAAS,CADG;AAEZC,kBAAc,CAFF;AAGZC,eAAW;AAHC,CAAhB;;AAMAC,GAAGC,KAAH,CAAS;AACLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,kBAAU;AACNC,eADM,iBACA;AACF,uBAAO,KAAKC,SAAZ;AACH,aAHK;AAINC,eAJM,eAIFC,KAJE,EAIK;AACP,qBAAKF,SAAL,GAAiBE,KAAjB;AACA,oBAAIA,KAAJ,EAAW;AACP,yBAAKC,aAAL;AACH;AACJ;AATK;;AAhBF,KADP;;AA+BL;;;;AAIAC,SAnCK,iBAmCCC,SAnCD,EAmCY;AACb,aAAKC,YAAL,CAAkBD,SAAlB;AACH,KArCI;AAuCLF,iBAvCK,2BAuCW;AACZ,aAAKI,gBAAL,CAAsB,KAAKT,QAA3B;AACH,KAzCI;AA2CLS,oBA3CK,4BA2CYT,QA3CZ,EA2CsB;AACvB,YAAIU,UAAUC,QAAQ,SAAR,CAAd;AACAD,gBAAQD,gBAAR,CAAyBT,QAAzB;AACH,KA9CI;AAgDLY,iBAhDK,2BAgDW;AACZ,YAAIC,OAAOhB,GAAGiB,GAAH,CAAOC,GAAP,EAAX;AACA,YAAIC,OAAQ,uCAAuCC,OAAvC,CAA+C,OAA/C,EAAwD,UAAUC,CAAV,EAAa;AAC7E,gBAAIC,IAAIC,KAAKC,MAAL,KAAgB,EAAhB,GAAqB,CAA7B;AAAA,gBACIC,IAAIJ,KAAK,GAAL,GAAWC,CAAX,GAAgBA,IAAI,GAAJ,GAAU,GADlC;AAEA,mBAAOG,EAAEC,QAAF,CAAW,EAAX,CAAP;AACH,SAJW,CAAZ;AAKAP,eAAOA,OAAOH,KAAKU,QAAL,EAAd;AACA,eAAOP,IAAP;AACH,KAzDI;;;AA2DL;;;;AAIAR,gBA/DK,wBA+DQD,SA/DR,EA+DmB;AACpB,YAAIiB,UAAU,IAAd;AACA,gBAAOjB,SAAP;AACI,iBAAKd,UAAUC,OAAf;AACI;AACJ,iBAAKD,UAAUE,YAAf;AACI;AACJ,iBAAKF,UAAUG,SAAf;AACI,oBAAI6B,WAAW5B,GAAGiB,GAAH,CAAOY,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAf;AACA,oBAAIF,YAAY,IAAhB,EAAsB;AAClB,wBAAIT,OAAO,KAAKJ,aAAL,EAAX;AACAf,uBAAGiB,GAAH,CAAOY,YAAP,CAAoBE,OAApB,CAA4B,UAA5B,EAAuCZ,IAAvC;AACAS,+BAAWT,IAAX;AACH;AACDQ,0BAAU;AACN,4BAAQC,QADF;AAEN,gCAAYhC,UAAUG;AAFhB,iBAAV;AAIA;AACJ;AACIC,mBAAGgC,GAAH,CAAO,+BAA+BtB,SAAtC;AAlBR;AAoBA,YAAIiB,OAAJ,EAAa;AACT,gBAAIM,aAAanB,QAAQ,YAAR,CAAjB;AACA,gBAAIoB,OAAO,IAAX;AACAlC,eAAGmC,MAAH,CAAUC,OAAV,CAAkB,sBAAlB,EAAyC,UAASC,GAAT,EAAaC,GAAb,EAAkB;AACvD,oBAAIC,OAAOD,IAAIE,IAAJ,CAAS,CAAT,EAAYD,IAAvB;AACA,oBAAIE,KAAKH,IAAIE,IAAJ,CAAS,CAAT,EAAYC,EAArB;AACA,oBAAIC,SAAS,OAAb;AACAf,0BAAUgB,KAAKC,SAAL,CAAejB,OAAf,CAAV;AACAM,2BAAWY,WAAX,CAAuBlB,OAAvB,EAA+BY,IAA/B,EAAoCE,EAApC,EAAuCC,MAAvC,EAA8C,UAASI,GAAT,EAAa;AACvD,wBAAIC,WAAWD,IAAIE,YAAnB;AACAD,+BAAWJ,KAAKM,KAAL,CAAWF,QAAX,CAAX;AACA,wBAAIA,SAASG,IAAT,IAAiB,eAArB,EAAsC;AAClC,4BAAI/C,WAAW4C,SAAS5C,QAAxB;AACA+B,6BAAK/B,QAAL,GAAgBA,QAAhB;AACH,qBAHD,MAIK,IAAI4C,SAASG,IAAT,IAAiB,YAArB,EAAmC,CAGvC;AACJ,iBAXD;AAYH,aAjBD;AAkBH;AACJ;AA3GI,CAAT","file":"loginMgr.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\nvar LoginType = {\n    ACCOUNT: 1,\n    WE_CHAT_GAME: 2,\n    DEVICE_ID: 3\n}\n\ncc.Class({\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        playerId: {\n            get() {\n                return this._playerId\n            },\n            set(value) {\n                this._playerId = value\n                if (value) {\n                    this.onPlayerIdSet()\n                }\n            }\n        },\n        \n    },\n\n    /**\n     * \n     * @param {LoginType} loginType \n     */\n    login(loginType) {\n        this._getPlayerId(loginType)\n    },\n\n    onPlayerIdSet() {\n        this.updatePlayerData(this.playerId)\n    },\n\n    updatePlayerData(playerId) {\n        var dataMgr = require(\"dataMgr\")\n        dataMgr.updatePlayerData(playerId)\n    },\n\n    _genarateUUID() {\n        var time = cc.sys.now()\n        var uuid =  'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0,\n                v = c == 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n        uuid = uuid + time.toString()\n        return uuid\n    },\n\n    /**\n     * \n     * @param {LoginType} loginType \n     */\n    _getPlayerId(loginType) {\n        var message = null\n        switch(loginType) {\n            case LoginType.ACCOUNT:\n                break\n            case LoginType.WE_CHAT_GAME:\n                break\n            case LoginType.DEVICE_ID:\n                var deviceId = cc.sys.localStorage.getItem(\"deviceId\")\n                if (deviceId == null) {\n                    var uuid = this._genarateUUID()\n                    cc.sys.localStorage.setItem(\"deviceId\",uuid)\n                    deviceId = uuid\n                }\n                message = {\n                    \"code\": deviceId,\n                    \"codeType\": LoginType.DEVICE_ID\n                }\n                break\n            default:\n                cc.log(\"Login type erro: now it's \" + loginType)\n        }\n        if (message) {\n            var networkMgr = require(\"networkMgr\")\n            var self = this\n            cc.loader.loadRes(\"configs/serverConfig\",function(err,res) {\n                var port = res.json[0].port\n                var ip = res.json[0].ip\n                var suffix = \"login\"\n                message = JSON.stringify(message)\n                networkMgr.sendMessage(message,port,ip,suffix,function(xhr){\n                    var response = xhr.responseText\n                    response = JSON.parse(response)\n                    if (response.type == \"login_success\") {\n                        var playerId = response.playerId\n                        self.playerId = playerId\n                    }\n                    else if (response.type == \"login_fail\") {\n\n                        \n                    }\n                })\n            })\n        }\n    }\n});\n"]}