{"version":3,"sources":["../../../../../../assets/scripts/towerDefens/monstors/assets/scripts/towerDefens/monstors/soldierMgr.js"],"names":["cc","Class","extends","Component","properties","state","moveSpeed","hurt","attackRange","hurtRange","hurtDelta","hurtType","physicalDefense","magicDefense","findEnmyRange","targetEnmy","health","get","_health","set","value","maxHealth","_maxHealth","mapMgr","start","find","getComponent","update","dt","index","monstors","oneMonstor","monstorMgr","dis","getDisOfTwoPoint","node","position","getHurt","hurtNum","givenType","actralHurt","temp"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,eAAO,CADC;AAER;AACA;AACA;AACA;AACA;AACAC,mBAAW,EAPH;AAQRC,cAAM,EARE;AASRC,qBAAa,EATL;AAURC,mBAAW,CAAC,CAVJ;AAWRC,mBAAW,GAXH;AAYRC,kBAAU,CAZF,EAYK;AACbC,yBAAiB,CAbT;AAcRC,sBAAc,CAdN;AAeRC,uBAAe,GAfP;AAgBRC,oBAAY,IAhBJ;;AAkBRC,gBAAQ;AACJC,eADI,iBACE;AACF,oBAAI,KAAKC,OAAL,IAAgB,IAApB,EAA0B;AACtB,yBAAKA,OAAL,GAAe,GAAf;AACH;AACD,uBAAO,KAAKA,OAAZ;AACH,aANG;AAOJC,eAPI,eAOAC,KAPA,EAOO;AACP,qBAAKF,OAAL,GAAeE,KAAf;AACH;AATG,SAlBA;AA6BRC,mBAAW;AACPJ,eADO,iBACD;AACF,oBAAI,KAAKK,UAAL,IAAmB,IAAvB,EAA6B;AACzB,yBAAKA,UAAL,GAAkB,GAAlB;AACH;AACD,uBAAO,KAAKA,UAAZ;AACH,aANM;AAOPH,eAPO,eAOHC,KAPG,EAOI;AACP,qBAAKE,UAAL,GAAkBF,KAAlB;AACH;AATM,SA7BH;AAwCRG,gBAAQ;;AAxCA,KAHP;;AAgDL;;AAEA;;AAEAC,SApDK,mBAoDI;AACL,aAAKD,MAAL,GAAcvB,GAAGyB,IAAH,CAAQ,gBAAR,EAA0BC,YAA1B,CAAuC,QAAvC,CAAd;AACH,KAtDI;AAwDLC,UAxDK,kBAwDGC,EAxDH,EAwDO;AACR,YAAI,KAAKvB,KAAL,IAAc,CAAlB,EAAqB;AACjB,iBAAK,IAAIwB,KAAT,IAAkB,KAAKN,MAAL,CAAYO,QAA9B,EAAwC;AACpC,oBAAIC,aAAa,KAAKR,MAAL,CAAYO,QAAZ,CAAqBD,KAArB,CAAjB;AACA,oBAAIG,aAAaD,WAAWL,YAAX,CAAwB,YAAxB,CAAjB;AACA,oBAAIO,MAAMD,WAAWE,gBAAX,CAA4B,KAAKC,IAAL,CAAUC,QAAtC,EAA+CL,WAAWK,QAA1D,CAAV;AACA,oBAAIH,OAAO,KAAKnB,aAAhB,EAA+B;AAC3B,yBAAKC,UAAL,GAAkBgB,UAAlB;AACA,yBAAK1B,KAAL,GAAa,CAAb;AACA;AACH;AACJ;AACJ,SAXD,MAYK,IAAI,KAAKA,KAAL,IAAc,CAAlB,EAAqB,CAEzB;AAEJ,KAzEI;AA2ELgC,WA3EK,mBA2EGC,OA3EH,EA2EWC,SA3EX,EA2EsB;AACvB,YAAIC,aAAa,IAAjB;AACA,gBAAOD,SAAP;AACI,iBAAK,CAAL;AACIC,6BAAaF,WAAW,IAAI,KAAK1B,eAApB,CAAb;AACA;AACJ,iBAAK,CAAL;AACI4B,6BAAaF,WAAW,IAAI,KAAKzB,YAApB,CAAb;AACA;AACJ;AACI2B,6BAAaF,WAAW,IAAI,KAAK1B,eAApB,CAAb;AARR;;AAWA,YAAI6B,OAAO,KAAKzB,MAAL,GAAcwB,UAAzB;AACA,YAAIC,QAAQ,CAAZ,EAAe;AACX,iBAAKzB,MAAL,GAAc,CAAd;AACA,iBAAKX,KAAL,GAAa,CAAb;AACH,SAHD,MAIK;AACD,iBAAKW,MAAL,GAAcyB,IAAd;AACH;AACJ;AAhGI,CAAT","file":"soldierMgr.js","sourceRoot":"../../../../../../assets/scripts/towerDefens/monstors","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        state: 0,\n        //STATE ENUMS\n        //0 Idle,\n        //1 walk to target\n        //2 die\n        //3 battle\n        moveSpeed: 10,\n        hurt: 10,\n        attackRange: 10,\n        hurtRange: -1,\n        hurtDelta: 0.5,\n        hurtType: 1, // while 1 indicate physical ,and 2 indicate magic\n        physicalDefense: 2,\n        magicDefense: 0,\n        findEnmyRange: 100,\n        targetEnmy: null,\n\n        health: {\n            get() {\n                if (this._health == null) {\n                    this._health = 100\n                }\n                return this._health\n            },\n            set(value) {\n                this._health = value\n            }\n        },\n        maxHealth: {\n            get() {\n                if (this._maxHealth == null) {\n                    this._maxHealth = 100\n                }\n                return this._maxHealth\n            },\n            set(value) {\n                this._maxHealth = value\n            }\n        },\n        mapMgr: null\n        \n\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n        this.mapMgr = cc.find(\"Canvas/mapNode\").getComponent(\"mapMgr\")\n    },\n\n    update (dt) {\n        if (this.state == 0) {\n            for (var index in this.mapMgr.monstors) {\n                var oneMonstor = this.mapMgr.monstors[index]\n                var monstorMgr = oneMonstor.getComponent(\"monstorMgr\")\n                var dis = monstorMgr.getDisOfTwoPoint(this.node.position,oneMonstor.position)\n                if (dis <= this.findEnmyRange) {\n                    this.targetEnmy = oneMonstor\n                    this.state = 1 \n                    break\n                }\n            }\n        }\n        else if (this.state == 1) {\n\n        }\n\n    },\n\n    getHurt(hurtNum,givenType) {\n        var actralHurt = null\n        switch(givenType){\n            case 1:\n                actralHurt = hurtNum / (1 + this.physicalDefense)\n                break\n            case 2:\n                actralHurt = hurtNum / (1 + this.magicDefense)\n                break\n            default:\n                actralHurt = hurtNum / (1 + this.physicalDefense)    \n        }\n\n        var temp = this.health - actralHurt\n        if (temp <= 0) {\n            this.health = 0\n            this.state = 3\n        }\n        else {\n            this.health = temp\n        }\n    }\n});\n"]}