{"version":3,"sources":["../../../../../../assets/scripts/towerDefens/level/assets/scripts/towerDefens/level/resMgr.js"],"names":["cc","Class","extends","Component","properties","isAllResesLoaded","get","_isAllResesLoaded","set","value","log","completeCallBack","target","onAllResesLoaded","resesNum","_resesNum","loadedResesNum","_loadedResesNum","reses","_reses","monstors","towers","onLoad","start","loadNeededReses","monstorIds","refreshPlan","node","parent","getChildByName","getComponent","k","monstorsConfig","key","monstorId","some","x","push","monstorConfig","require","monstorPrefabNames","index","id","prefabName","towerPrefabNames","Object","keys","length","url","loader","loadRes","err","res"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,0BAAkB;AACdC,eADc,iBACR;AACF,uBAAO,KAAKC,iBAAZ;AACH,aAHa;AAIdC,eAJc,eAIVC,KAJU,EAIH;AACP,qBAAKF,iBAAL,GAAyBE,KAAzB;AACA,oBAAIA,SAAS,IAAb,EAAmB;AACfT,uBAAGU,GAAH,CAAO,SAAP;AACA,wBAAI,KAAKC,gBAAL,IAAyB,IAA7B,EAAmC;AAC/B,6BAAKA,gBAAL,CAAsB,IAAtB;AACH;AACD,wBAAG,KAAKC,MAAL,IAAe,IAAlB,EAAwB;AACpB;AACH;AACD,yBAAKA,MAAL,CAAYC,gBAAZ;AACH;AACJ;AAhBa,SAhBV;AAkCRC,kBAAU;AACNR,eADM,iBACA;AACF,uBAAO,KAAKS,SAAZ;AACH,aAHK;AAINP,eAJM,eAIFC,KAJE,EAIK;AACP,qBAAKM,SAAL,GAAiBN,KAAjB;AACH;AANK,SAlCF;AA0CRO,wBAAgB;AACZV,eADY,iBACN;AACF,uBAAO,KAAKW,eAAZ;AACH,aAHW;AAIZT,eAJY,eAIRC,KAJQ,EAID;AACP,qBAAKQ,eAAL,GAAuBR,KAAvB;AACA,oBAAIA,SAAS,KAAKK,QAAlB,EAA4B;AACxB,yBAAKT,gBAAL,GAAwB,IAAxB;AACH;AACJ;AATW,SA1CR;AAqDRa,eAAO;AACHZ,eADG,iBACG;AACF,oBAAI,KAAKa,MAAL,IAAe,IAAnB,EAAyB;AACrB,yBAAKA,MAAL,GAAc;AACVC,kCAAU,EADA;AAEVC,gCAAQ;AAFE,qBAAd;AAIH;AACD,uBAAO,KAAKF,MAAZ;AACH,aATE;AAUHX,eAVG,eAUCC,KAVD,EAUQ;AACP,qBAAKU,MAAL,GAAcV,KAAd;AACH;AAZE,SArDC;AAmERG,gBAAQ,IAnEA;AAoERD,0BAAkB;AApEV,KAHP;;AA0EL;;AAEAW,UA5EK,oBA4EK,CAET,CA9EI;AAgFLC,SAhFK,mBAgFI,CAER,CAlFI;AAoFLC,mBApFK,6BAoFa;AACd,YAAIC,aAAa,EAAjB;AACA,YAAIC,cAAc,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,cAAjB,CAAgC,aAAhC,EAA+CC,YAA/C,CAA4D,SAA5D,EAAuEJ,WAAzF;AACA,aAAK,IAAIK,CAAT,IAAcL,WAAd,EAA2B;AACvB,gBAAIM,iBAAiBN,YAAYK,CAAZ,EAAeC,cAApC;AACA,iBAAK,IAAIC,GAAT,IAAgBD,cAAhB,EAAgC;AAC5B,oBAAIE,YAAYF,eAAeC,GAAf,EAAoBC,SAApC;AACA,oBAAIT,WAAWU,IAAX,CAAgB,UAASC,CAAT,EAAW;AAAC,2BAAOA,KAAKF,SAAZ;AAAsB,iBAAlD,KAAuD,KAA3D,EAAkE;AAC9DT,+BAAWY,IAAX,CAAgBH,SAAhB;AACH;AACJ;AACJ;;AAED,YAAII,gBAAgBC,QAAQ,eAAR,CAApB;AACA,YAAIC,qBAAqB,EAAzB;AACA,aAAK,IAAIC,KAAT,IAAkBhB,UAAlB,EAA8B;AAC1B,gBAAIiB,KAAKjB,WAAWgB,KAAX,CAAT;AACA,gBAAIE,aAAaL,cAAcI,EAAd,EAAkBC,UAAnC;AACAH,+BAAmBE,EAAnB,IAAyBC,UAAzB;AACH;;AAED,YAAIC,mBAAmB;AACnB,qBAAS;AADU,SAAvB;;AAIA,aAAK9B,QAAL,GAAgB+B,OAAOC,IAAP,CAAYN,kBAAZ,EAAgCO,MAAhC,GAAyCF,OAAOC,IAAP,CAAYF,gBAAZ,EAA8BG,MAAvF;AACA,aAAK/B,cAAL,GAAsB,CAAtB;;AAEA,aAAI,IAAIiB,GAAR,IAAeO,kBAAf,EAAmC;AAC/B,aAAC,UAASP,GAAT,EAAarB,MAAb,EAAoB;AACjB,oBAAI+B,aAAaH,mBAAmBP,GAAnB,CAAjB;AACA,oBAAIe,MAAM,sBAAsBL,UAAhC;AACA3C,mBAAGiD,MAAH,CAAUC,OAAV,CAAkBF,GAAlB,EAAsB,UAASG,GAAT,EAAaC,GAAb,EAAiB;AACnCpD,uBAAGU,GAAH,CAAOE,OAAOM,KAAd;AACAN,2BAAOM,KAAP,CAAaE,QAAb,CAAsBa,GAAtB,IAA6BmB,GAA7B;AACAxC,2BAAOI,cAAP,IAAyB,CAAzB;AACH,iBAJD;AAKH,aARD,EAQGiB,GARH,EAQO,IARP;AASH;;AAED,aAAI,IAAIA,GAAR,IAAeW,gBAAf,EAAiC;AAC7B,aAAC,UAASX,GAAT,EAAarB,MAAb,EAAoB;AACjB,oBAAI+B,aAAaC,iBAAiBX,GAAjB,CAAjB;AACA,oBAAIe,MAAM,oBAAoBL,UAA9B;AACA3C,mBAAGiD,MAAH,CAAUC,OAAV,CAAkBF,GAAlB,EAAsB,UAASG,GAAT,EAAaC,GAAb,EAAiB;AACnCxC,2BAAOM,KAAP,CAAaG,MAAb,CAAoBY,GAApB,IAA2BmB,GAA3B;AACAxC,2BAAOI,cAAP,IAAyB,CAAzB;AACH,iBAHD;AAIH,aAPD,EAOGiB,GAPH,EAOO,IAPP;AAQH;AAEJ;AAvII;;AA6IL;AA7IJ","file":"resMgr.js","sourceRoot":"../../../../../../assets/scripts/towerDefens/level","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        isAllResesLoaded: {\n            get() {\n                return this._isAllResesLoaded\n            },\n            set(value) {\n                this._isAllResesLoaded = value\n                if (value == true) {\n                    cc.log(\"COMPLET\")\n                    if (this.completeCallBack != null) {\n                        this.completeCallBack(this)\n                    }\n                    if(this.target == null) {\n                        return\n                    }\n                    this.target.onAllResesLoaded()\n                }\n            }\n        },\n        resesNum: {\n            get() {\n                return this._resesNum\n            },\n            set(value) {\n                this._resesNum = value\n            }\n        },\n        loadedResesNum: {\n            get() {\n                return this._loadedResesNum\n            },\n            set(value) {\n                this._loadedResesNum = value\n                if (value == this.resesNum) {\n                    this.isAllResesLoaded = true\n                }\n            }\n        },\n        reses: {\n            get() {\n                if (this._reses == null) {\n                    this._reses = {\n                        monstors: {},\n                        towers: {}\n                    }\n                }\n                return this._reses\n            },\n            set(value) {\n                this._reses = value\n            }\n        },\n        target: null,\n        completeCallBack: null\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n\n    },\n\n    start () {\n\n    },\n\n    loadNeededReses() {\n        var monstorIds = []\n        var refreshPlan = this.node.parent.getChildByName(\"gameMgrNode\").getComponent(\"gameMgr\").refreshPlan\n        for (var k in refreshPlan) {\n            var monstorsConfig = refreshPlan[k].monstorsConfig\n            for (var key in monstorsConfig) {\n                var monstorId = monstorsConfig[key].monstorId\n                if (monstorIds.some(function(x){return x == monstorId}) == false) {\n                    monstorIds.push(monstorId)\n                }\n            }\n        }\n\n        var monstorConfig = require(\"monstorConfig\")\n        var monstorPrefabNames = {}\n        for (var index in monstorIds) {\n            var id = monstorIds[index]\n            var prefabName = monstorConfig[id].prefabName\n            monstorPrefabNames[id] = prefabName\n        }\n\n        var towerPrefabNames = {\n            \"20001\": \"acherTow_101_01\"\n        }\n\n        this.resesNum = Object.keys(monstorPrefabNames).length + Object.keys(towerPrefabNames).length\n        this.loadedResesNum = 0\n\n        for(var key in monstorPrefabNames) {\n            (function(key,target){\n                var prefabName = monstorPrefabNames[key]\n                var url = \"prefabs/monstors/\" + prefabName\n                cc.loader.loadRes(url,function(err,res){\n                    cc.log(target.reses)\n                    target.reses.monstors[key] = res\n                    target.loadedResesNum += 1\n                })\n            })(key,this)\n        }\n\n        for(var key in towerPrefabNames) {\n            (function(key,target){\n                var prefabName = towerPrefabNames[key]\n                var url = \"prefabs/towers/\" + prefabName\n                cc.loader.loadRes(url,function(err,res){\n                    target.reses.towers[key] = res\n                    target.loadedResesNum += 1\n                })\n            })(key,this)\n        }\n\n    },\n\n    \n\n    \n\n    // update (dt) {},\n});\n"]}