{"version":3,"sources":["../../../../../../assets/scripts/towerDefens/level/assets/scripts/towerDefens/level/resMgr.js"],"names":["cc","Class","extends","Component","properties","isAllResesLoaded","get","_isAllResesLoaded","set","value","log","completeCallBack","target","onAllResesLoaded","resesNum","_resesNum","loadedResesNum","_loadedResesNum","reses","_reses","enabledTowerIds","onLoad","start","loadNeededReses","refreshPlan","node","parent","getChildByName","getComponent","monstorConfig","require","monstorResIds","key","monstors","monstorsConfig","k","monstorObj","monstorId","resId","toString","isNewId","every","x","push","towerResIds","towerConfig","index","id","oneTowerConfig","length","_loadOneRes","givenId","resConfig","obj","targetNum","Object","keys","currentNum","url","loader","loadRes","err","res"],"mappings":"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","file":"resMgr.js","sourceRoot":"../../../../../../assets/scripts/towerDefens/level","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        isAllResesLoaded: {\n            get() {\n                return this._isAllResesLoaded\n            },\n            set(value) {\n                this._isAllResesLoaded = value\n                if (value == true) {\n                    cc.log(\"COMPLET\")\n                    if (this.completeCallBack != null) {\n                        this.completeCallBack(this)\n                    }\n                    if(this.target == null) {\n                        return\n                    }\n                    this.target.onAllResesLoaded()\n                }\n            }\n        },\n        resesNum: {\n            get() {\n                return this._resesNum\n            },\n            set(value) {\n                this._resesNum = value\n            }\n        },\n        loadedResesNum: {\n            get() {\n                return this._loadedResesNum\n            },\n            set(value) {\n                this._loadedResesNum = value\n                if (value == this.resesNum) {\n                    this.isAllResesLoaded = true\n                }\n            }\n        },\n        reses: {\n            get() {\n                if (this._reses == null) {\n                    this._reses = {}\n                }\n                return this._reses\n            },\n            set(value) {\n                this._reses = value\n            }\n        },\n        target: null,\n        completeCallBack: null,\n        enabledTowerIds: []\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n\n    },\n\n    start () {\n\n    },\n\n    loadNeededReses() {\n        //load monstors and towers reses\n        var refreshPlan = this.node.parent.getChildByName(\"gameMgrNode\").getComponent(\"gameMgr\").refreshPlan\n        var monstorConfig = require(\"monstorConfig\")\n\n        var monstorResIds = []\n        for (var key in refreshPlan) {\n            var monstors = refreshPlan[key].monstorsConfig\n            for (var k in monstors) {\n                var monstorObj = monstors[k]\n                var monstorId = monstorObj.monstorId\n                var resId = monstorConfig[monstorId.toString()].resId\n                var isNewId = monstorResIds.every(function(x){\n                    return x != resId\n                })\n                if (isNewId == true) {\n                    monstorResIds.push(resId)\n                }\n            }\n        }\n\n        var towerResIds = []\n        var towerConfig = require(\"towerConfig\")\n        for (var index in this.enabledTowerIds) {\n            var id = this.enabledTowerIds[index]\n            var oneTowerConfig = towerConfig[id.toString()]\n            for (var key in oneTowerConfig) {\n                var resId = oneTowerConfig[key].resId\n                var isNewId = towerResIds.every(function(x){\n                    return x != resId\n                })\n                if (isNewId == true) {\n                    towerResIds.push(resId)\n                }\n            }\n        }\n\n        this.resesNum = monstorResIds.length + towerResIds.length\n        this.loadedResesNum = 0\n\n        for(var index in monstorResIds) {\n            var id = monstorResIds[index]\n            this._loadOneRes(id)\n        }\n        for (var index in towerResIds) {\n            var id = towerResIds[index]\n            this._loadOneRes(id)\n        }\n    },\n\n    _loadOneRes(givenId){\n        var resConfig = require(\"resConfig\")\n        var obj = resConfig[givenId.toString()]\n        this.reses[givenId.toString()] = {}\n\n        var targetNum = Object.keys(obj).length\n        var currentNum = 0\n        for(var key in obj) {\n            (function(key,target){\n                var url = obj[key]\n                if (url != \"\"){\n                    cc.loader.loadRes(url,function(err,res){\n                        target.reses[givenId.toString()][key] = res\n                        currentNum += 1\n                        if (targetNum == currentNum) {\n                            target.loadedResesNum += 1\n                        }\n                    })\n                }\n                else {\n                    target.reses[givenId.toString()][key] = null\n                    currentNum += 1\n                    if (targetNum == currentNum) {\n                        target.loadedResesNum += 1\n                    }\n                }\n            })(key,this)\n        }\n    }\n    \n\n    \n\n    // update (dt) {},\n});\n"]}