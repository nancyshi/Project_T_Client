{"version":3,"sources":["../../../../../assets/scripts/towerDefens/assets/scripts/towerDefens/monstorMgr.js"],"names":["cc","Class","extends","Component","properties","basePathPoints","state","get","_state","set","value","onReachFinalTarget","health","moveSpeed","target","vx","vy","targetIndex","onLoad","start","node","x","y","t","getDisOfTwoPoint","position","update","dt","nextX","nextY","length","calculatePathPoints","p1","p2","temp","Math","sqrt"],"mappings":"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","file":"monstorMgr.js","sourceRoot":"../../../../../assets/scripts/towerDefens","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        basePathPoints: [],\n        state: {\n            get() {\n                return this._state\n            },\n            set(value) {\n                this._state = value\n                if (value == 2) {\n                    this.onReachFinalTarget()\n                }\n            }\n        //STATE ENUM\n        //0 default , do nothing\n        //1 go to target\n        //2 reach final target\n        },\n        health: 100,\n        moveSpeed: 100,\n        \n\n\n        target: null,\n        vx: null,\n        vy: null,\n        targetIndex: 1\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n    },\n\n    start () {\n        this.node.x = this.basePathPoints[0].x\n        this.node.y = this.basePathPoints[0].y\n        this.target = this.basePathPoints[this.targetIndex]\n        var t = this.getDisOfTwoPoint(this.node.position,this.target) / this.moveSpeed\n        this.vx = (this.target.x - this.node.x) / t\n        this.vy = (this.target.y - this.node.y) / t\n    },\n\n    update (dt) {\n        if (this.state == 1) {\n            var nextX = this.node.x + this.vx * dt\n            var nextY = this.node.y + this.vy * dt\n            if (this.vx != 0) {\n                if ((nextX >= this.target.x && nextX > this.node.x) || (nextX <= this.target.x && nextX < this.node.x)) {\n                    nextX = this.target.x\n                    nextY = this.target.y\n                }\n            }\n            else {\n                if ((nextY >= this.target.y && nextY > this.node.y) || (nextY <= this.target.y && nextY < this.node.y)) {\n                    nextX = this.target.x\n                    nextY = this.target.y\n                }\n            }\n            this.node.x = nextX\n            this.node.y = nextY\n\n            if (nextX == this.target.x && nextY == this.target.y) {\n                if (this.targetIndex + 1 < this.basePathPoints.length ) {\n                    this.targetIndex += 1\n                    this.target = this.basePathPoints[this.targetIndex]\n                    var t = this.getDisOfTwoPoint(this.node.position,this.target) / this.moveSpeed\n                    this.vx = (this.target.x - this.node.x) / t\n                    this.vy = (this.target.y - this.node.y) / t\n                }\n                else {\n                    this.state = 2\n                }\n            }\n\n        }\n    },\n\n    calculatePathPoints () {\n        \n    },\n\n    getDisOfTwoPoint(p1,p2) {\n        var temp = (p2.x - p1.x) * (p2.x - p1.x) + (p2.y - p1.y) * (p2.y - p1.y)\n        return Math.sqrt(temp)\n    },\n\n    onReachFinalTarget() {\n\n    }\n});\n"]}