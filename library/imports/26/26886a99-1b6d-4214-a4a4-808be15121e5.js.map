{"version":3,"sources":["../../../../assets/scripts/assets/scripts/networkMgr.js"],"names":["Networkmgr","cc","Class","properties","start","sendMessage","msg","port","ip","suffix","successCallBack","xhr","XMLHttpRequest","onreadystatechange","readyState","status","url","toString","open","send","sharedMgr","module","exports"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,aAAaC,GAAGC,KAAH,CAAS;;AAEtBC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfQ,KAFU;;AAoBtB;;AAEA;;AAEAC,SAxBsB,mBAwBb,CAER,CA1BqB;;;AA4BtB;;AAEAC,eA9BsB,uBA8BVC,GA9BU,EA8BNC,IA9BM,EA8BDC,EA9BC,EA8BEC,MA9BF,EA8BSC,eA9BT,EA8B0B;AAC5C,YAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,YAAIE,kBAAJ,GAAyB,YAAW;AAChC,gBAAIF,IAAIG,UAAJ,IAAkB,CAAlB,IAAwBH,IAAII,MAAJ,IAAc,GAAd,IAAqBJ,IAAII,MAAJ,GAAa,GAA9D,EAAoE;AAChEL,gCAAgBC,GAAhB;AACH;AACJ,SAJD;AAKA,YAAIK,MAAM,YAAYR,EAAZ,GAAiB,GAAjB,GAAuBD,KAAKU,QAAL,EAAvB,GAAwC,GAAxC,GAA8CR,OAAOQ,QAAP,EAAxD;AACAN,YAAIO,IAAJ,CAAS,MAAT,EAAgBF,GAAhB;AACAL,YAAIQ,IAAJ,CAASb,GAAT;AACH;AAxCqB,CAAT,CAAjB;;AA4CA,IAAIc,YAAY,IAAIpB,UAAJ,EAAhB;AACAqB,OAAOC,OAAP,GAAiBF,SAAjB","file":"networkMgr.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nvar Networkmgr = cc.Class({\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    // update (dt) {},\n\n    sendMessage(msg,port,ip,suffix,successCallBack) {\n        var xhr = new XMLHttpRequest()\n        xhr.onreadystatechange = function() {\n            if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {\n                successCallBack(xhr)\n            }\n        }\n        var url = \"http://\" + ip + \":\" + port.toString() +\"/\" + suffix.toString()\n        xhr.open(\"POST\",url)\n        xhr.send(msg)\n    }\n});\n\n\nvar sharedMgr = new Networkmgr()\nmodule.exports = sharedMgr"]}